/* -*- Mode:C; buffer-read-only:t -*-
This file is automatically generated, do not edit */
  for (iter=0; iter<3; iter++) {
    switch (iter) {
    case 0:                     /* (X,Y) => Z */
      axmin = (Tgez(xmin) ? xmin : fd_safe_negate_val(xmin));
      axmax = (Tgez(xmax) ? xmax : fd_safe_negate_val(xmax));
      aymin = (Tgez(ymin) ? ymin : fd_safe_negate_val(ymin));
      aymax = (Tgez(ymax) ? ymax : fd_safe_negate_val(ymax));
      switch (ARITH_DISPATCH(xmin,xmax,ymin,ymax)) {
      /* AUTOMATICALLY GENERATED CASES FOR quo PRUNING DVAR dvz */
      case 0x9: /* inf..-axmax * 0..0 */
      case 0x49: /* -axmin..-axmax * 0..0 */
      case 0x19: /* inf..0 * 0..0 */
      case 0x59: /* -axmin..0 * 0..0 */
      case 0x29: /* inf..+axmax * 0..0 */
      case 0x39: /* inf..sup * 0..0 */
      case 0x69: /* -axmin..+axmax * 0..0 */
      case 0x79: /* -axmin..sup * 0..0 */
      case 0x99: /* 0..0 * 0..0 */
      case 0xa9: /* 0..+axmax * 0..0 */
      case 0xb9: /* 0..sup * 0..0 */
      case 0xe9: /* +axmin..+axmax * 0..0 */
      case 0xf9: /* +axmin..sup * 0..0 */
        goto ret;
      case 0x3: /* inf..-axmax * inf..sup */
      case 0x12: /* inf..0 * inf..+aymax */
      case 0x13: /* inf..0 * inf..sup */
      case 0x16: /* inf..0 * -aymin..+aymax */
      case 0x17: /* inf..0 * -aymin..sup */
      case 0x30: /* inf..sup * inf..-aymax */
      case 0x34: /* inf..sup * -aymin..-aymax */
      case 0x31: /* inf..sup * inf..0 */
      case 0x35: /* inf..sup * -aymin..0 */
      case 0x22: /* inf..+axmax * inf..+aymax */
      case 0x23: /* inf..+axmax * inf..sup */
      case 0x26: /* inf..+axmax * -aymin..+aymax */
      case 0x27: /* inf..+axmax * -aymin..sup */
      case 0x32: /* inf..sup * inf..+aymax */
      case 0x33: /* inf..sup * inf..sup */
      case 0x36: /* inf..sup * -aymin..+aymax */
      case 0x37: /* inf..sup * -aymin..sup */
      case 0x72: /* -axmin..sup * inf..+aymax */
      case 0x73: /* -axmin..sup * inf..sup */
      case 0x76: /* -axmin..sup * -aymin..+aymax */
      case 0x77: /* -axmin..sup * -aymin..sup */
      case 0x3a: /* inf..sup * 0..+aymax */
      case 0x3b: /* inf..sup * 0..sup */
      case 0x3e: /* inf..sup * +aymin..+aymax */
      case 0x3f: /* inf..sup * +aymin..sup */
      case 0xb2: /* 0..sup * inf..+aymax */
      case 0xb3: /* 0..sup * inf..sup */
      case 0xb6: /* 0..sup * -aymin..+aymax */
      case 0xb7: /* 0..sup * -aymin..sup */
      case 0xf3: /* +axmin..sup * inf..sup */
      default:
        continue;
      case 0x7: /* inf..-axmax * -aymin..sup */
        newmin = TaggedOne;
        newmax = fd_safe_minus(fd_safe_divd(axmax,aymin),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xf2: /* +axmin..sup * inf..+aymax */
        newmin = TaggedOne;
        newmax = fd_safe_minus(fd_safe_divd(axmin,aymax),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x2: /* inf..-axmax * inf..+aymax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmax,aymax));
        newmax = TaggedMinusOne;
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x6: /* inf..-axmax * -aymin..+aymax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmax,aymax));
        newmax = fd_safe_minus(fd_safe_divd(axmax,aymin),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xf7: /* +axmin..sup * -aymin..sup */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmin,aymin));
        newmax = TaggedMinusOne;
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xf6: /* +axmin..sup * -aymin..+aymax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmin,aymin));
        newmax = fd_safe_minus(fd_safe_divd(axmin,aymax),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x90: /* 0..0 * inf..-aymax */
      case 0x94: /* 0..0 * -aymin..-aymax */
      case 0x91: /* 0..0 * inf..0 */
      case 0x95: /* 0..0 * -aymin..0 */
      case 0x92: /* 0..0 * inf..+aymax */
      case 0x93: /* 0..0 * inf..sup */
      case 0x96: /* 0..0 * -aymin..+aymax */
      case 0x97: /* 0..0 * -aymin..sup */
      case 0x9a: /* 0..0 * 0..+aymax */
      case 0x9b: /* 0..0 * 0..sup */
      case 0x9e: /* 0..0 * +aymin..+aymax */
      case 0x9f: /* 0..0 * +aymin..sup */
        newmin = TaggedZero;
        newmax = TaggedZero;
        break;
      case 0xaa: /* 0..+axmax * 0..+aymax */
      case 0xab: /* 0..+axmax * 0..sup */
      case 0xeb: /* +axmin..+axmax * 0..sup */
        newmin = TaggedZero;
        newmax = axmax;
        break;
      case 0x41: /* -axmin..-axmax * inf..0 */
      case 0x51: /* -axmin..0 * inf..0 */
      case 0x55: /* -axmin..0 * -aymin..0 */
        newmin = TaggedZero;
        newmax = axmin;
        break;
      case 0x0: /* inf..-axmax * inf..-aymax */
      case 0x1: /* inf..-axmax * inf..0 */
      case 0x10: /* inf..0 * inf..-aymax */
      case 0x14: /* inf..0 * -aymin..-aymax */
      case 0x11: /* inf..0 * inf..0 */
      case 0x15: /* inf..0 * -aymin..0 */
      case 0xba: /* 0..sup * 0..+aymax */
      case 0xbb: /* 0..sup * 0..sup */
      case 0xbe: /* 0..sup * +aymin..+aymax */
      case 0xbf: /* 0..sup * +aymin..sup */
      case 0xfb: /* +axmin..sup * 0..sup */
      case 0xff: /* +axmin..sup * +aymin..sup */
        newmin = TaggedZero;
        newmax = Sup;
        break;
      case 0xae: /* 0..+axmax * +aymin..+aymax */
      case 0xaf: /* 0..+axmax * +aymin..sup */
      case 0xef: /* +axmin..+axmax * +aymin..sup */
        newmin = TaggedZero;
        newmax = fd_safe_divd(axmax,aymin);
        break;
      case 0x40: /* -axmin..-axmax * inf..-aymax */
      case 0x50: /* -axmin..0 * inf..-aymax */
      case 0x54: /* -axmin..0 * -aymin..-aymax */
        newmin = TaggedZero;
        newmax = fd_safe_divd(axmin,aymax);
        break;
      case 0xa1: /* 0..+axmax * inf..0 */
      case 0xa5: /* 0..+axmax * -aymin..0 */
      case 0xe1: /* +axmin..+axmax * inf..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = TaggedZero;
        break;
      case 0xa2: /* 0..+axmax * inf..+aymax */
      case 0xa3: /* 0..+axmax * inf..sup */
      case 0xa6: /* 0..+axmax * -aymin..+aymax */
      case 0xa7: /* 0..+axmax * -aymin..sup */
      case 0xe3: /* +axmin..+axmax * inf..sup */
        newmin = fd_safe_negate_val(axmax);
        newmax = axmax;
        break;
      case 0x61: /* -axmin..+axmax * inf..0 */
      case 0x65: /* -axmin..+axmax * -aymin..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = axmin;
        break;
      case 0x21: /* inf..+axmax * inf..0 */
      case 0x25: /* inf..+axmax * -aymin..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = Sup;
        break;
      case 0xe5: /* +axmin..+axmax * -aymin..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = fd_safe_negate(fd_safe_divd(axmin,aymin));
        break;
      case 0x4b: /* -axmin..-axmax * 0..sup */
      case 0x5a: /* -axmin..0 * 0..+aymax */
      case 0x5b: /* -axmin..0 * 0..sup */
        newmin = fd_safe_negate_val(axmin);
        newmax = TaggedZero;
        break;
      case 0x6a: /* -axmin..+axmax * 0..+aymax */
      case 0x6b: /* -axmin..+axmax * 0..sup */
        newmin = fd_safe_negate_val(axmin);
        newmax = axmax;
        break;
      case 0x43: /* -axmin..-axmax * inf..sup */
      case 0x52: /* -axmin..0 * inf..+aymax */
      case 0x53: /* -axmin..0 * inf..sup */
      case 0x56: /* -axmin..0 * -aymin..+aymax */
      case 0x57: /* -axmin..0 * -aymin..sup */
        newmin = fd_safe_negate_val(axmin);
        newmax = axmin;
        break;
      case 0x7a: /* -axmin..sup * 0..+aymax */
      case 0x7b: /* -axmin..sup * 0..sup */
        newmin = fd_safe_negate_val(axmin);
        newmax = Sup;
        break;
      case 0x4a: /* -axmin..-axmax * 0..+aymax */
        newmin = fd_safe_negate_val(axmin);
        newmax = fd_safe_negate(fd_safe_divd(axmax,aymax));
        break;
      case 0xb: /* inf..-axmax * 0..sup */
      case 0xf: /* inf..-axmax * +aymin..sup */
      case 0x1a: /* inf..0 * 0..+aymax */
      case 0x1b: /* inf..0 * 0..sup */
      case 0x1e: /* inf..0 * +aymin..+aymax */
      case 0x1f: /* inf..0 * +aymin..sup */
      case 0xb0: /* 0..sup * inf..-aymax */
      case 0xb4: /* 0..sup * -aymin..-aymax */
      case 0xb1: /* 0..sup * inf..0 */
      case 0xb5: /* 0..sup * -aymin..0 */
      case 0xf0: /* +axmin..sup * inf..-aymax */
      case 0xf1: /* +axmin..sup * inf..0 */
        newmin = Inf;
        newmax = TaggedZero;
        break;
      case 0x2a: /* inf..+axmax * 0..+aymax */
      case 0x2b: /* inf..+axmax * 0..sup */
        newmin = Inf;
        newmax = axmax;
        break;
      case 0x71: /* -axmin..sup * inf..0 */
      case 0x75: /* -axmin..sup * -aymin..0 */
        newmin = Inf;
        newmax = axmin;
        break;
      case 0xa: /* inf..-axmax * 0..+aymax */
      case 0xe: /* inf..-axmax * +aymin..+aymax */
        newmin = Inf;
        newmax = fd_safe_negate(fd_safe_divd(axmax,aymax));
        break;
      case 0xf4: /* +axmin..sup * -aymin..-aymax */
      case 0xf5: /* +axmin..sup * -aymin..0 */
        newmin = Inf;
        newmax = fd_safe_negate(fd_safe_divd(axmin,aymin));
        break;
      case 0x2e: /* inf..+axmax * +aymin..+aymax */
      case 0x2f: /* inf..+axmax * +aymin..sup */
        newmin = Inf;
        newmax = fd_safe_divd(axmax,aymin);
        break;
      case 0x70: /* -axmin..sup * inf..-aymax */
      case 0x74: /* -axmin..sup * -aymin..-aymax */
        newmin = Inf;
        newmax = fd_safe_divd(axmin,aymax);
        break;
      case 0xa0: /* 0..+axmax * inf..-aymax */
      case 0xa4: /* 0..+axmax * -aymin..-aymax */
      case 0xe0: /* +axmin..+axmax * inf..-aymax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,aymax));
        newmax = TaggedZero;
        break;
      case 0x20: /* inf..+axmax * inf..-aymax */
      case 0x24: /* inf..+axmax * -aymin..-aymax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,aymax));
        newmax = Sup;
        break;
      case 0xe4: /* +axmin..+axmax * -aymin..-aymax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,aymax));
        newmax = fd_safe_negate(fd_safe_divd(axmin,aymin));
        break;
      case 0x60: /* -axmin..+axmax * inf..-aymax */
      case 0x64: /* -axmin..+axmax * -aymin..-aymax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,aymax));
        newmax = fd_safe_divd(axmin,aymax);
        break;
      case 0x4f: /* -axmin..-axmax * +aymin..sup */
      case 0x5e: /* -axmin..0 * +aymin..+aymax */
      case 0x5f: /* -axmin..0 * +aymin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,aymin));
        newmax = TaggedZero;
        break;
      case 0x7e: /* -axmin..sup * +aymin..+aymax */
      case 0x7f: /* -axmin..sup * +aymin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,aymin));
        newmax = Sup;
        break;
      case 0x4e: /* -axmin..-axmax * +aymin..+aymax */
        newmin = fd_safe_negate(fd_safe_divd(axmin,aymin));
        newmax = fd_safe_negate(fd_safe_divd(axmax,aymax));
        break;
      case 0x6e: /* -axmin..+axmax * +aymin..+aymax */
      case 0x6f: /* -axmin..+axmax * +aymin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,aymin));
        newmax = fd_safe_divd(axmax,aymin);
        break;
      case 0x62: /* -axmin..+axmax * inf..+aymax */
      case 0x63: /* -axmin..+axmax * inf..sup */
      case 0x66: /* -axmin..+axmax * -aymin..+aymax */
      case 0x67: /* -axmin..+axmax * -aymin..sup */
        newmin = fd_safe_negate(fd_safe_max(axmin,axmax));
        newmax = fd_safe_max(axmin,axmax);
        break;
      case 0x45: /* -axmin..-axmax * -aymin..0 */
        newmin = fd_safe_divd(axmax,aymin);
        newmax = axmin;
        break;
      case 0x4: /* inf..-axmax * -aymin..-aymax */
      case 0x5: /* inf..-axmax * -aymin..0 */
        newmin = fd_safe_divd(axmax,aymin);
        newmax = Sup;
        break;
      case 0x44: /* -axmin..-axmax * -aymin..-aymax */
        newmin = fd_safe_divd(axmax,aymin);
        newmax = fd_safe_divd(axmin,aymax);
        break;
      case 0xea: /* +axmin..+axmax * 0..+aymax */
        newmin = fd_safe_divd(axmin,aymax);
        newmax = axmax;
        break;
      case 0xfa: /* +axmin..sup * 0..+aymax */
      case 0xfe: /* +axmin..sup * +aymin..+aymax */
        newmin = fd_safe_divd(axmin,aymax);
        newmax = Sup;
        break;
      case 0xee: /* +axmin..+axmax * +aymin..+aymax */
        newmin = fd_safe_divd(axmin,aymax);
        newmax = fd_safe_divd(axmax,aymin);
        break;
      case 0xe2: /* +axmin..+axmax * inf..+aymax */
        newmin = TaggedOne;
        newmax = fd_safe_minus(fd_safe_divd(axmin,aymax),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_negate_val(axmax);
        newmax = axmax;
        break;
      case 0xe7: /* +axmin..+axmax * -aymin..sup */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmin,aymin));
        newmax = TaggedMinusOne;
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_negate_val(axmax);
        newmax = axmax;
        break;
      case 0xe6: /* +axmin..+axmax * -aymin..+aymax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmin,aymin));
        newmax = fd_safe_minus(fd_safe_divd(axmin,aymax),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_negate_val(axmax);
        newmax = axmax;
        break;
      case 0x47: /* -axmin..-axmax * -aymin..sup */
        newmin = TaggedOne;
        newmax = fd_safe_minus(fd_safe_divd(axmax,aymin),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_negate_val(axmin);
        newmax = axmin;
        break;
      case 0x42: /* -axmin..-axmax * inf..+aymax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmax,aymax));
        newmax = TaggedMinusOne;
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_negate_val(axmin);
        newmax = axmin;
        break;
      case 0x46: /* -axmin..-axmax * -aymin..+aymax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divd(axmax,aymax));
        newmax = fd_safe_minus(fd_safe_divd(axmax,aymin),TaggedOne);
        if (dvar_prune_interval_t( dvz, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_negate_val(axmin);
        newmax = axmin;
        break;
      }
      if (dvar_fix_interval_t(dvz, newmin, newmax)<0) {
        if (newmin==Sup) /* integer overflow */
          fd.fd_overflow = 2;
        else if (newmax==Inf) /* integer underflow */
          fd.fd_overflow = 1;
        goto ret;
      }
      break;
    case 1:                     /* (X,Z) => Y */
      axmin = (Tgez(xmin) ? xmin : fd_safe_negate_val(xmin));
      axmax = (Tgez(xmax) ? xmax : fd_safe_negate_val(xmax));
      azmin = (Tgez(zmin) ? zmin : fd_safe_negate_val(zmin));
      azmax = (Tgez(zmax) ? zmax : fd_safe_negate_val(zmax));
      switch (ARITH_DISPATCH(xmin,xmax,zmin,zmax)) {
      /* AUTOMATICALLY GENERATED CASES FOR quo PRUNING DVAR dvy */
      case 0x90: /* 0..0 * inf..-azmax */
      case 0x94: /* 0..0 * -azmin..-azmax */
      case 0x9e: /* 0..0 * +azmin..+azmax */
      case 0x9f: /* 0..0 * +azmin..sup */
        goto ret;
      case 0x12: /* inf..0 * inf..+azmax */
      case 0x13: /* inf..0 * inf..sup */
      case 0x16: /* inf..0 * -azmin..+azmax */
      case 0x17: /* inf..0 * -azmin..sup */
      case 0x52: /* -axmin..0 * inf..+azmax */
      case 0x53: /* -axmin..0 * inf..sup */
      case 0x56: /* -axmin..0 * -azmin..+azmax */
      case 0x57: /* -axmin..0 * -azmin..sup */
      case 0x11: /* inf..0 * inf..0 */
      case 0x15: /* inf..0 * -azmin..0 */
      case 0x51: /* -axmin..0 * inf..0 */
      case 0x55: /* -axmin..0 * -azmin..0 */
      case 0x19: /* inf..0 * 0..0 */
      case 0x59: /* -axmin..0 * 0..0 */
      case 0x1a: /* inf..0 * 0..+azmax */
      case 0x1b: /* inf..0 * 0..sup */
      case 0x5a: /* -axmin..0 * 0..+azmax */
      case 0x5b: /* -axmin..0 * 0..sup */
      case 0x30: /* inf..sup * inf..-azmax */
      case 0x34: /* inf..sup * -azmin..-azmax */
      case 0x22: /* inf..+axmax * inf..+azmax */
      case 0x23: /* inf..+axmax * inf..sup */
      case 0x26: /* inf..+axmax * -azmin..+azmax */
      case 0x27: /* inf..+axmax * -azmin..sup */
      case 0x32: /* inf..sup * inf..+azmax */
      case 0x33: /* inf..sup * inf..sup */
      case 0x36: /* inf..sup * -azmin..+azmax */
      case 0x37: /* inf..sup * -azmin..sup */
      case 0x62: /* -axmin..+axmax * inf..+azmax */
      case 0x63: /* -axmin..+axmax * inf..sup */
      case 0x66: /* -axmin..+axmax * -azmin..+azmax */
      case 0x67: /* -axmin..+axmax * -azmin..sup */
      case 0x72: /* -axmin..sup * inf..+azmax */
      case 0x73: /* -axmin..sup * inf..sup */
      case 0x76: /* -axmin..sup * -azmin..+azmax */
      case 0x77: /* -axmin..sup * -azmin..sup */
      case 0x21: /* inf..+axmax * inf..0 */
      case 0x25: /* inf..+axmax * -azmin..0 */
      case 0x31: /* inf..sup * inf..0 */
      case 0x35: /* inf..sup * -azmin..0 */
      case 0x61: /* -axmin..+axmax * inf..0 */
      case 0x65: /* -axmin..+axmax * -azmin..0 */
      case 0x71: /* -axmin..sup * inf..0 */
      case 0x75: /* -axmin..sup * -azmin..0 */
      case 0x29: /* inf..+axmax * 0..0 */
      case 0x39: /* inf..sup * 0..0 */
      case 0x69: /* -axmin..+axmax * 0..0 */
      case 0x79: /* -axmin..sup * 0..0 */
      case 0x2a: /* inf..+axmax * 0..+azmax */
      case 0x2b: /* inf..+axmax * 0..sup */
      case 0x3a: /* inf..sup * 0..+azmax */
      case 0x3b: /* inf..sup * 0..sup */
      case 0x6a: /* -axmin..+axmax * 0..+azmax */
      case 0x6b: /* -axmin..+axmax * 0..sup */
      case 0x7a: /* -axmin..sup * 0..+azmax */
      case 0x7b: /* -axmin..sup * 0..sup */
      case 0x3e: /* inf..sup * +azmin..+azmax */
      case 0x3f: /* inf..sup * +azmin..sup */
      case 0x92: /* 0..0 * inf..+azmax */
      case 0x93: /* 0..0 * inf..sup */
      case 0x96: /* 0..0 * -azmin..+azmax */
      case 0x97: /* 0..0 * -azmin..sup */
      case 0x91: /* 0..0 * inf..0 */
      case 0x95: /* 0..0 * -azmin..0 */
      case 0x99: /* 0..0 * 0..0 */
      case 0x9a: /* 0..0 * 0..+azmax */
      case 0x9b: /* 0..0 * 0..sup */
      case 0xa2: /* 0..+axmax * inf..+azmax */
      case 0xa3: /* 0..+axmax * inf..sup */
      case 0xa6: /* 0..+axmax * -azmin..+azmax */
      case 0xa7: /* 0..+axmax * -azmin..sup */
      case 0xb2: /* 0..sup * inf..+azmax */
      case 0xb3: /* 0..sup * inf..sup */
      case 0xb6: /* 0..sup * -azmin..+azmax */
      case 0xb7: /* 0..sup * -azmin..sup */
      case 0xa1: /* 0..+axmax * inf..0 */
      case 0xa5: /* 0..+axmax * -azmin..0 */
      case 0xb1: /* 0..sup * inf..0 */
      case 0xb5: /* 0..sup * -azmin..0 */
      case 0xa9: /* 0..+axmax * 0..0 */
      case 0xb9: /* 0..sup * 0..0 */
      case 0xaa: /* 0..+axmax * 0..+azmax */
      case 0xab: /* 0..+axmax * 0..sup */
      case 0xba: /* 0..sup * 0..+azmax */
      case 0xbb: /* 0..sup * 0..sup */
      default:
        continue;
      case 0x3: /* inf..-axmax * inf..sup */
      case 0x43: /* -axmin..-axmax * inf..sup */
      case 0xe3: /* +axmin..+axmax * inf..sup */
      case 0xf3: /* +axmin..sup * inf..sup */
        newmin = TaggedZero;
        newmax = TaggedZero;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xb: /* inf..-axmax * 0..sup */
      case 0x4b: /* -axmin..-axmax * 0..sup */
        newmin = TaggedZero;
        newmax = axmax;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xe1: /* +axmin..+axmax * inf..0 */
      case 0xf1: /* +axmin..sup * inf..0 */
        newmin = TaggedZero;
        newmax = axmin;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x7: /* inf..-axmax * -azmin..sup */
      case 0x47: /* -axmin..-axmax * -azmin..sup */
        newmin = TaggedZero;
        newmax = fd_safe_minus(fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmin,TaggedOne)),TaggedOne);
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xe2: /* +axmin..+axmax * inf..+azmax */
      case 0xf2: /* +axmin..sup * inf..+azmax */
        newmin = TaggedZero;
        newmax = fd_safe_minus(fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmax,TaggedOne)),TaggedOne);
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x1: /* inf..-axmax * inf..0 */
      case 0x41: /* -axmin..-axmax * inf..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = TaggedZero;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x9: /* inf..-axmax * 0..0 */
      case 0x49: /* -axmin..-axmax * 0..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = axmax;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x5: /* inf..-axmax * -azmin..0 */
      case 0x45: /* -axmin..-axmax * -azmin..0 */
        newmin = fd_safe_negate_val(axmax);
        newmax = fd_safe_minus(fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmin,TaggedOne)),TaggedOne);
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xeb: /* +axmin..+axmax * 0..sup */
      case 0xfb: /* +axmin..sup * 0..sup */
        newmin = fd_safe_negate_val(axmin);
        newmax = TaggedZero;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xe9: /* +axmin..+axmax * 0..0 */
      case 0xf9: /* +axmin..sup * 0..0 */
        newmin = fd_safe_negate_val(axmin);
        newmax = axmin;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xea: /* +axmin..+axmax * 0..+azmax */
      case 0xfa: /* +axmin..sup * 0..+azmax */
        newmin = fd_safe_negate_val(axmin);
        newmax = fd_safe_minus(fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmax,TaggedOne)),TaggedOne);
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x2: /* inf..-axmax * inf..+azmax */
      case 0x42: /* -axmin..-axmax * inf..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmax,TaggedOne)));
        newmax = TaggedZero;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xa: /* inf..-axmax * 0..+azmax */
      case 0x4a: /* -axmin..-axmax * 0..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmax,TaggedOne)));
        newmax = axmax;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x6: /* inf..-axmax * -azmin..+azmax */
      case 0x46: /* -axmin..-axmax * -azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmax,TaggedOne)));
        newmax = fd_safe_minus(fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmin,TaggedOne)),TaggedOne);
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xe7: /* +axmin..+axmax * -azmin..sup */
      case 0xf7: /* +axmin..sup * -azmin..sup */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmin,TaggedOne)));
        newmax = TaggedZero;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xe5: /* +axmin..+axmax * -azmin..0 */
      case 0xf5: /* +axmin..sup * -azmin..0 */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmin,TaggedOne)));
        newmax = axmin;
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0xe6: /* +axmin..+axmax * -azmin..+azmax */
      case 0xf6: /* +axmin..sup * -azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmin,TaggedOne)));
        newmax = fd_safe_minus(fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmax,TaggedOne)),TaggedOne);
        if (dvar_prune_interval_t( dvy, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x10: /* inf..0 * inf..-azmax */
      case 0x14: /* inf..0 * -azmin..-azmax */
      case 0xbe: /* 0..sup * +azmin..+azmax */
      case 0xbf: /* 0..sup * +azmin..sup */
        newmin = TaggedZero;
        newmax = Sup;
        break;
      case 0xae: /* 0..+axmax * +azmin..+azmax */
      case 0xaf: /* 0..+axmax * +azmin..sup */
        newmin = TaggedZero;
        newmax = fd_safe_divd(axmax,azmin);
        break;
      case 0x50: /* -axmin..0 * inf..-azmax */
      case 0x54: /* -axmin..0 * -azmin..-azmax */
        newmin = TaggedZero;
        newmax = fd_safe_divd(axmin,azmax);
        break;
      case 0x0: /* inf..-axmax * inf..-azmax */
      case 0xff: /* +axmin..sup * +azmin..sup */
        newmin = TaggedOne;
        newmax = Sup;
        break;
      case 0xef: /* +axmin..+axmax * +azmin..sup */
        newmin = TaggedOne;
        newmax = fd_safe_divd(axmax,azmin);
        break;
      case 0x40: /* -axmin..-axmax * inf..-azmax */
        newmin = TaggedOne;
        newmax = fd_safe_divd(axmin,azmax);
        break;
      case 0xf: /* inf..-axmax * +azmin..sup */
      case 0xf0: /* +axmin..sup * inf..-azmax */
        newmin = Inf;
        newmax = TaggedMinusOne;
        break;
      case 0x1e: /* inf..0 * +azmin..+azmax */
      case 0x1f: /* inf..0 * +azmin..sup */
      case 0xb0: /* 0..sup * inf..-azmax */
      case 0xb4: /* 0..sup * -azmin..-azmax */
        newmin = Inf;
        newmax = TaggedZero;
        break;
      case 0xe: /* inf..-axmax * +azmin..+azmax */
        newmin = Inf;
        newmax = fd_safe_negate(fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmax,TaggedOne)));
        break;
      case 0xf4: /* +axmin..sup * -azmin..-azmax */
        newmin = Inf;
        newmax = fd_safe_negate(fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmin,TaggedOne)));
        break;
      case 0x2e: /* inf..+axmax * +azmin..+azmax */
      case 0x2f: /* inf..+axmax * +azmin..sup */
        newmin = Inf;
        newmax = fd_safe_divd(axmax,azmin);
        break;
      case 0x70: /* -axmin..sup * inf..-azmax */
      case 0x74: /* -axmin..sup * -azmin..-azmax */
        newmin = Inf;
        newmax = fd_safe_divd(axmin,azmax);
        break;
      case 0xe0: /* +axmin..+axmax * inf..-azmax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,azmax));
        newmax = TaggedMinusOne;
        break;
      case 0xa0: /* 0..+axmax * inf..-azmax */
      case 0xa4: /* 0..+axmax * -azmin..-azmax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,azmax));
        newmax = TaggedZero;
        break;
      case 0x20: /* inf..+axmax * inf..-azmax */
      case 0x24: /* inf..+axmax * -azmin..-azmax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,azmax));
        newmax = Sup;
        break;
      case 0xe4: /* +axmin..+axmax * -azmin..-azmax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,azmax));
        newmax = fd_safe_negate(fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmin,TaggedOne)));
        break;
      case 0x60: /* -axmin..+axmax * inf..-azmax */
      case 0x64: /* -axmin..+axmax * -azmin..-azmax */
        newmin = fd_safe_negate(fd_safe_divd(axmax,azmax));
        newmax = fd_safe_divd(axmin,azmax);
        break;
      case 0x4f: /* -axmin..-axmax * +azmin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,azmin));
        newmax = TaggedMinusOne;
        break;
      case 0x5e: /* -axmin..0 * +azmin..+azmax */
      case 0x5f: /* -axmin..0 * +azmin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,azmin));
        newmax = TaggedZero;
        break;
      case 0x7e: /* -axmin..sup * +azmin..+azmax */
      case 0x7f: /* -axmin..sup * +azmin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,azmin));
        newmax = Sup;
        break;
      case 0x4e: /* -axmin..-axmax * +azmin..+azmax */
        newmin = fd_safe_negate(fd_safe_divd(axmin,azmin));
        newmax = fd_safe_negate(fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmax,TaggedOne)));
        break;
      case 0x6e: /* -axmin..+axmax * +azmin..+azmax */
      case 0x6f: /* -axmin..+axmax * +azmin..sup */
        newmin = fd_safe_negate(fd_safe_divd(axmin,azmin));
        newmax = fd_safe_divd(axmax,azmin);
        break;
      case 0x4: /* inf..-axmax * -azmin..-azmax */
        newmin = fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmin,TaggedOne));
        newmax = Sup;
        break;
      case 0x44: /* -axmin..-axmax * -azmin..-azmax */
        newmin = fd_safe_divu(fd_safe_plus(axmax,TaggedOne),fd_safe_plus(azmin,TaggedOne));
        newmax = fd_safe_divd(axmin,azmax);
        break;
      case 0xfe: /* +axmin..sup * +azmin..+azmax */
        newmin = fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmax,TaggedOne));
        newmax = Sup;
        break;
      case 0xee: /* +axmin..+axmax * +azmin..+azmax */
        newmin = fd_safe_divu(fd_safe_plus(axmin,TaggedOne),fd_safe_plus(azmax,TaggedOne));
        newmax = fd_safe_divd(axmax,azmin);
        break;
      }
      if (dvar_fix_interval_t(dvy, newmin, newmax)<0) {
        if (newmin==Sup) /* integer overflow */
          fd.fd_overflow = 2;
        else if (newmax==Inf) /* integer underflow */
          fd.fd_overflow = 1;
        goto ret;
      }
      break;
    case 2:                     /* (Y,Z) => X */
      aymin = (Tgez(ymin) ? ymin : fd_safe_negate_val(ymin));
      aymax = (Tgez(ymax) ? ymax : fd_safe_negate_val(ymax));
      azmin = (Tgez(zmin) ? zmin : fd_safe_negate_val(zmin));
      azmax = (Tgez(zmax) ? zmax : fd_safe_negate_val(zmax));
      switch (ARITH_DISPATCH(ymin,ymax,zmin,zmax)) {
      /* AUTOMATICALLY GENERATED CASES FOR quo PRUNING DVAR dvx */
      case 0x90: /* 0..0 * inf..-azmax */
      case 0x94: /* 0..0 * -azmin..-azmax */
      case 0x91: /* 0..0 * inf..0 */
      case 0x95: /* 0..0 * -azmin..0 */
      case 0x92: /* 0..0 * inf..+azmax */
      case 0x93: /* 0..0 * inf..sup */
      case 0x96: /* 0..0 * -azmin..+azmax */
      case 0x97: /* 0..0 * -azmin..sup */
      case 0x99: /* 0..0 * 0..0 */
      case 0x9a: /* 0..0 * 0..+azmax */
      case 0x9b: /* 0..0 * 0..sup */
      case 0x9e: /* 0..0 * +azmin..+azmax */
      case 0x9f: /* 0..0 * +azmin..sup */
        goto ret;
      case 0x1: /* inf..-aymax * inf..0 */
      case 0x5: /* inf..-aymax * -azmin..0 */
      case 0x2: /* inf..-aymax * inf..+azmax */
      case 0x3: /* inf..-aymax * inf..sup */
      case 0x6: /* inf..-aymax * -azmin..+azmax */
      case 0x7: /* inf..-aymax * -azmin..sup */
      case 0x43: /* -aymin..-aymax * inf..sup */
      case 0x9: /* inf..-aymax * 0..0 */
      case 0xa: /* inf..-aymax * 0..+azmax */
      case 0xb: /* inf..-aymax * 0..sup */
      case 0x11: /* inf..0 * inf..0 */
      case 0x15: /* inf..0 * -azmin..0 */
      case 0x12: /* inf..0 * inf..+azmax */
      case 0x13: /* inf..0 * inf..sup */
      case 0x16: /* inf..0 * -azmin..+azmax */
      case 0x17: /* inf..0 * -azmin..sup */
      case 0x53: /* -aymin..0 * inf..sup */
      case 0x19: /* inf..0 * 0..0 */
      case 0x1a: /* inf..0 * 0..+azmax */
      case 0x1b: /* inf..0 * 0..sup */
      case 0x21: /* inf..+aymax * inf..0 */
      case 0x25: /* inf..+aymax * -azmin..0 */
      case 0x31: /* inf..sup * inf..0 */
      case 0x35: /* inf..sup * -azmin..0 */
      case 0x61: /* -aymin..+aymax * inf..0 */
      case 0x71: /* -aymin..sup * inf..0 */
      case 0x75: /* -aymin..sup * -azmin..0 */
      case 0x22: /* inf..+aymax * inf..+azmax */
      case 0x23: /* inf..+aymax * inf..sup */
      case 0x26: /* inf..+aymax * -azmin..+azmax */
      case 0x27: /* inf..+aymax * -azmin..sup */
      case 0x32: /* inf..sup * inf..+azmax */
      case 0x33: /* inf..sup * inf..sup */
      case 0x36: /* inf..sup * -azmin..+azmax */
      case 0x37: /* inf..sup * -azmin..sup */
      case 0x62: /* -aymin..+aymax * inf..+azmax */
      case 0x63: /* -aymin..+aymax * inf..sup */
      case 0x67: /* -aymin..+aymax * -azmin..sup */
      case 0x72: /* -aymin..sup * inf..+azmax */
      case 0x73: /* -aymin..sup * inf..sup */
      case 0x76: /* -aymin..sup * -azmin..+azmax */
      case 0x77: /* -aymin..sup * -azmin..sup */
      case 0x29: /* inf..+aymax * 0..0 */
      case 0x39: /* inf..sup * 0..0 */
      case 0x79: /* -aymin..sup * 0..0 */
      case 0x2a: /* inf..+aymax * 0..+azmax */
      case 0x2b: /* inf..+aymax * 0..sup */
      case 0x3a: /* inf..sup * 0..+azmax */
      case 0x3b: /* inf..sup * 0..sup */
      case 0x6b: /* -aymin..+aymax * 0..sup */
      case 0x7a: /* -aymin..sup * 0..+azmax */
      case 0x7b: /* -aymin..sup * 0..sup */
      case 0xb1: /* 0..sup * inf..0 */
      case 0xb5: /* 0..sup * -azmin..0 */
      case 0xa3: /* 0..+aymax * inf..sup */
      case 0xb2: /* 0..sup * inf..+azmax */
      case 0xb3: /* 0..sup * inf..sup */
      case 0xb6: /* 0..sup * -azmin..+azmax */
      case 0xb7: /* 0..sup * -azmin..sup */
      case 0xb9: /* 0..sup * 0..0 */
      case 0xba: /* 0..sup * 0..+azmax */
      case 0xbb: /* 0..sup * 0..sup */
      case 0xf1: /* +aymin..sup * inf..0 */
      case 0xf5: /* +aymin..sup * -azmin..0 */
      case 0xe3: /* +aymin..+aymax * inf..sup */
      case 0xf2: /* +aymin..sup * inf..+azmax */
      case 0xf3: /* +aymin..sup * inf..sup */
      case 0xf6: /* +aymin..sup * -azmin..+azmax */
      case 0xf7: /* +aymin..sup * -azmin..sup */
      case 0xf9: /* +aymin..sup * 0..0 */
      case 0xfa: /* +aymin..sup * 0..+azmax */
      case 0xfb: /* +aymin..sup * 0..sup */
      default:
        continue;
      case 0x20: /* inf..+aymax * inf..-azmax */
      case 0x30: /* inf..sup * inf..-azmax */
      case 0x34: /* inf..sup * -azmin..-azmax */
      case 0x60: /* -aymin..+aymax * inf..-azmax */
      case 0x70: /* -aymin..sup * inf..-azmax */
        newmin = fd_safe_minus(TaggedOne,azmax);
        newmax = fd_safe_minus(azmax,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x2f: /* inf..+aymax * +azmin..sup */
      case 0x3e: /* inf..sup * +azmin..+azmax */
      case 0x3f: /* inf..sup * +azmin..sup */
      case 0x6f: /* -aymin..+aymax * +azmin..sup */
      case 0x7f: /* -aymin..sup * +azmin..sup */
        newmin = fd_safe_minus(TaggedOne,azmin);
        newmax = fd_safe_minus(azmin,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        continue;
      case 0x10: /* inf..0 * inf..-azmax */
      case 0x14: /* inf..0 * -azmin..-azmax */
      case 0x50: /* -aymin..0 * inf..-azmax */
        newmin = azmax;
        newmax = Sup;
        break;
      case 0x54: /* -aymin..0 * -azmin..-azmax */
        newmin = azmax;
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0xaf: /* 0..+aymax * +azmin..sup */
      case 0xbe: /* 0..sup * +azmin..+azmax */
      case 0xbf: /* 0..sup * +azmin..sup */
        newmin = azmin;
        newmax = Sup;
        break;
      case 0xae: /* 0..+aymax * +azmin..+azmax */
        newmin = azmin;
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      case 0xa0: /* 0..+aymax * inf..-azmax */
      case 0xb0: /* 0..sup * inf..-azmax */
      case 0xb4: /* 0..sup * -azmin..-azmax */
        newmin = Inf;
        newmax = fd_safe_negate_val(azmax);
        break;
      case 0x1e: /* inf..0 * +azmin..+azmax */
      case 0x1f: /* inf..0 * +azmin..sup */
      case 0x5f: /* -aymin..0 * +azmin..sup */
        newmin = Inf;
        newmax = fd_safe_negate_val(azmin);
        break;
      case 0xe: /* inf..-aymax * +azmin..+azmax */
      case 0xf: /* inf..-aymax * +azmin..sup */
      case 0x4f: /* -aymin..-aymax * +azmin..sup */
        newmin = Inf;
        newmax = fd_safe_negate(fd_safe_mul_val(aymax,azmin));
        break;
      case 0xe0: /* +aymin..+aymax * inf..-azmax */
      case 0xf0: /* +aymin..sup * inf..-azmax */
      case 0xf4: /* +aymin..sup * -azmin..-azmax */
        newmin = Inf;
        newmax = fd_safe_negate(fd_safe_mul_val(aymin,azmax));
        break;
      case 0xa1: /* 0..+aymax * inf..0 */
      case 0xe1: /* +aymin..+aymax * inf..0 */
        newmin = Inf;
        newmax = fd_safe_minus(aymax,TaggedOne);
        break;
      case 0x4b: /* -aymin..-aymax * 0..sup */
      case 0x5b: /* -aymin..0 * 0..sup */
        newmin = Inf;
        newmax = fd_safe_minus(aymin,TaggedOne);
        break;
      case 0xa2: /* 0..+aymax * inf..+azmax */
      case 0xe2: /* +aymin..+aymax * inf..+azmax */
        newmin = Inf;
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      case 0x47: /* -aymin..-aymax * -azmin..sup */
      case 0x57: /* -aymin..0 * -azmin..sup */
        newmin = Inf;
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0x6a: /* -aymin..+aymax * 0..+azmax */
        newmin = fd_safe_negate(fd_safe_max(fd_safe_minus(aymax,TaggedOne),fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin),TaggedOne)));
        newmax = fd_safe_max(fd_safe_minus(aymin,TaggedOne),fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne));
        break;
      case 0x69: /* -aymin..+aymax * 0..0 */
        newmin = fd_safe_negate(fd_safe_max(fd_safe_minus(aymin,TaggedOne),fd_safe_minus(aymax,TaggedOne)));
        newmax = fd_safe_max(fd_safe_minus(aymin,TaggedOne),fd_safe_minus(aymax,TaggedOne));
        break;
      case 0x65: /* -aymin..+aymax * -azmin..0 */
        newmin = fd_safe_negate(fd_safe_max(fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax),TaggedOne),fd_safe_minus(aymin,TaggedOne)));
        newmax = fd_safe_max(fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne),fd_safe_minus(aymax,TaggedOne));
        break;
      case 0x66: /* -aymin..+aymax * -azmin..+azmax */
        newmin = fd_safe_negate(fd_safe_max(fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax),TaggedOne),fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin),TaggedOne)));
        newmax = fd_safe_max(fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne),fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne));
        break;
      case 0x0: /* inf..-aymax * inf..-azmax */
      case 0x4: /* inf..-aymax * -azmin..-azmax */
      case 0x40: /* -aymin..-aymax * inf..-azmax */
        newmin = fd_safe_mul_val(aymax,azmax);
        newmax = Sup;
        break;
      case 0x44: /* -aymin..-aymax * -azmin..-azmax */
        newmin = fd_safe_mul_val(aymax,azmax);
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0xef: /* +aymin..+aymax * +azmin..sup */
      case 0xfe: /* +aymin..sup * +azmin..+azmax */
      case 0xff: /* +aymin..sup * +azmin..sup */
        newmin = fd_safe_mul_val(aymin,azmin);
        newmax = Sup;
        break;
      case 0xee: /* +aymin..+aymax * +azmin..+azmax */
        newmin = fd_safe_mul_val(aymin,azmin);
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      case 0xab: /* 0..+aymax * 0..sup */
      case 0xeb: /* +aymin..+aymax * 0..sup */
        newmin = fd_safe_minus(TaggedOne,aymax);
        newmax = Sup;
        break;
      case 0xa9: /* 0..+aymax * 0..0 */
      case 0xe9: /* +aymin..+aymax * 0..0 */
        newmin = fd_safe_minus(TaggedOne,aymax);
        newmax = fd_safe_minus(aymax,TaggedOne);
        break;
      case 0xaa: /* 0..+aymax * 0..+azmax */
      case 0xea: /* +aymin..+aymax * 0..+azmax */
        newmin = fd_safe_minus(TaggedOne,aymax);
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      case 0x41: /* -aymin..-aymax * inf..0 */
      case 0x51: /* -aymin..0 * inf..0 */
        newmin = fd_safe_minus(TaggedOne,aymin);
        newmax = Sup;
        break;
      case 0x49: /* -aymin..-aymax * 0..0 */
      case 0x59: /* -aymin..0 * 0..0 */
        newmin = fd_safe_minus(TaggedOne,aymin);
        newmax = fd_safe_minus(aymin,TaggedOne);
        break;
      case 0x45: /* -aymin..-aymax * -azmin..0 */
      case 0x55: /* -aymin..0 * -azmin..0 */
        newmin = fd_safe_minus(TaggedOne,aymin);
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0xa7: /* 0..+aymax * -azmin..sup */
      case 0xe7: /* +aymin..+aymax * -azmin..sup */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = Sup;
        break;
      case 0xa4: /* 0..+aymax * -azmin..-azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = fd_safe_negate_val(azmax);
        break;
      case 0xe4: /* +aymin..+aymax * -azmin..-azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = fd_safe_negate(fd_safe_mul_val(aymin,azmax));
        break;
      case 0xa5: /* 0..+aymax * -azmin..0 */
      case 0xe5: /* +aymin..+aymax * -azmin..0 */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = fd_safe_minus(aymax,TaggedOne);
        break;
      case 0xa6: /* 0..+aymax * -azmin..+azmax */
      case 0xe6: /* +aymin..+aymax * -azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      case 0x42: /* -aymin..-aymax * inf..+azmax */
      case 0x52: /* -aymin..0 * inf..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = Sup;
        break;
      case 0x5e: /* -aymin..0 * +azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = fd_safe_negate_val(azmin);
        break;
      case 0x4e: /* -aymin..-aymax * +azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = fd_safe_negate(fd_safe_mul_val(aymax,azmin));
        break;
      case 0x4a: /* -aymin..-aymax * 0..+azmax */
      case 0x5a: /* -aymin..0 * 0..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = fd_safe_minus(aymin,TaggedOne);
        break;
      case 0x46: /* -aymin..-aymax * -azmin..+azmax */
      case 0x56: /* -aymin..0 * -azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0x2e: /* inf..+aymax * +azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,azmin);
        newmax = fd_safe_minus(azmin,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        newmin = Inf;
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      case 0x74: /* -aymin..sup * -azmin..-azmax */
        newmin = fd_safe_minus(TaggedOne,azmax);
        newmax = fd_safe_minus(azmax,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        newmin = Inf;
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0x24: /* inf..+aymax * -azmin..-azmax */
        newmin = fd_safe_minus(TaggedOne,azmax);
        newmax = fd_safe_minus(azmax,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = Sup;
        break;
      case 0x64: /* -aymin..+aymax * -azmin..-azmax */
        newmin = fd_safe_minus(TaggedOne,azmax);
        newmax = fd_safe_minus(azmax,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymax,azmin),aymax));
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymin,azmin),aymin),TaggedOne);
        break;
      case 0x7e: /* -aymin..sup * +azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,azmin);
        newmax = fd_safe_minus(azmin,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = Sup;
        break;
      case 0x6e: /* -aymin..+aymax * +azmin..+azmax */
        newmin = fd_safe_minus(TaggedOne,azmin);
        newmax = fd_safe_minus(azmin,TaggedOne);
        if (dvar_prune_interval_t( dvx, newmin, newmax)<0)
          goto ret;
        newmin = fd_safe_minus(TaggedOne,fd_safe_plus(fd_safe_mul_val(aymin,azmax),aymin));
        newmax = fd_safe_minus(fd_safe_plus(fd_safe_mul_val(aymax,azmax),aymax),TaggedOne);
        break;
      }
      if (dvar_fix_interval_t(dvx, newmin, newmax)<0) {
        if (newmin==Sup) /* integer overflow */
          fd.fd_overflow = 2;
        else if (newmax==Inf) /* integer underflow */
          fd.fd_overflow = 1;
        goto ret;
      }
      break;
    }
  }
