predicate all_different_int(array [int] of var int: x);
predicate all_equal_int(array [int] of var int: x);
predicate among_sicstus(var int: n, array [int] of var int: x, set of int: v);
predicate at_least_int(int: n, array [int] of var int: x, int: v);
predicate at_most_int(int: n, array [int] of var int: x, int: v);
predicate bin_packing_capa_sicstus(array [int] of int: c, array [int] of var int: bin, array [int] of int: w, int: min_index);
predicate bin_packing_load_sicstus(array [int] of var int: l, array [int] of var int: bin, array [int] of int: w, int: min_index);
predicate bin_packing_sicstus(int: c, array [int] of var int: bin, array [int] of int: w);
predicate count_sicstus(array [int] of var int: x, var int: y, var int: c);
predicate cumulative(array [int] of var int: s, array [int] of var int: d, array [int] of var int: r, var int: b);
predicate diffn_sicstus(array [int] of var int: x, array [int] of var int: y, array [int] of var int: dx, array [int] of var int: dy);
predicate distribute_sicstus(array [int] of var int: card, array [int] of var int: representation, array [int] of var int: base);
predicate element_bool_sicstus(var int: i, array [int] of var bool: x, var bool: y, int: min_index);
predicate element_int_sicstus(var int: i, array [int] of var int: x, var int: y, int: min_index);
predicate exactly_int(int: n, array [int] of var int: x, int: v);
predicate global_cardinality_low_up_sicstus(array [int] of var int: x, array [int] of int: cover, array [int] of int: lbound, array [int] of int: ubound, int: closed);
predicate global_cardinality_sicstus(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts, int: closed);
predicate inverse_sicstus(array [int] of var int: f, array [int] of var int: invf, int: min_index_f, int: min_index_invf);
predicate lex2_sicstus(array [int] of var int: x, int: nrows, int: ncolumns, int: relop);
predicate lex_sicstus(array [int] of var int: x, array [int] of var int: y, int: relop);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate member_bool(array [int] of var bool: x, var bool: y);
predicate member_int(array [int] of var int: x, var int: y);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate nvalue(var int: n, array [int] of var int: x);
predicate pairwise_relation_bool_sicstus(array [int] of var bool: x, int: relop);
predicate pairwise_relation_int_sicstus(array [int] of var int: x, int: relop);
predicate regular_sicstus(array [int] of var int: x, int: Q, int: S, array [int] of int: d, int: q0, set of int: F);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate sum_pred_sicstus(var int: i, array [int] of set of int: sets, array [int] of int: cs, var int: s, int: min_index);
predicate table_bool_sicstus(array [int] of var bool: x, array [int] of bool: t);
predicate table_int_sicstus(array [int] of var int: x, array [int] of int: t);
predicate value_precede_chain_sicstus(array [int] of int: c, array [int] of var int: x);
predicate value_precede_sicstus(int: s, int: t, array [int] of var int: x);
var 1..26: a :: output_var;
var 1..26: b :: output_var;
var 1..26: c :: output_var;
var 1..26: d :: output_var;
var 1..26: e :: output_var;
var 1..26: f :: output_var;
var 1..26: g :: output_var;
var 1..26: h :: output_var;
var 1..26: i :: output_var;
var 1..26: j :: output_var;
var 1..26: k :: output_var;
var 1..26: l :: output_var;
var 1..26: m :: output_var;
var 1..26: n :: output_var;
var 1..26: o :: output_var;
var 1..26: p :: output_var;
var 1..26: q :: output_var;
var 1..26: r :: output_var;
var 1..26: s :: output_var;
var 1..26: t :: output_var;
var 1..26: u :: output_var;
var 1..26: v :: output_var;
var 1..26: w :: output_var;
var 1..26: x :: output_var;
var 1..26: y :: output_var;
var 1..26: z :: output_var;
constraint all_different_int([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);
constraint int_lin_eq([1, 1, 2], [a, j, z], 58);
constraint int_lin_eq([1, 1, 2], [b, e, o], 53);
constraint int_lin_eq([1, 2, 1], [l, o, s], 37);
constraint int_lin_eq([2, 1, 1], [e, g, l], 66);
constraint int_lin_eq([1, 1, 1, 1], [e, l, r, y], 47);
constraint int_lin_eq([1, 1, 1, 1], [g, n, o, s], 61);
constraint int_lin_eq([1, 1, 1, 2], [e, f, g, u], 50);
constraint int_lin_eq([1, 1, 2, 1], [c, e, l, o], 43);
constraint int_lin_eq([2, 1, 1, 1], [e, h, m, t], 72);
constraint int_lin_eq([1, 1, 1, 1, 1], [a, c, e, l, s], 51);
constraint int_lin_eq([1, 1, 1, 1, 1], [a, e, o, p, r], 65);
constraint int_lin_eq([1, 1, 1, 1, 1], [a, k, l, o, p], 59);
constraint int_lin_eq([1, 1, 1, 1, 1], [a, l, t, w, z], 34);
constraint int_lin_eq([1, 1, 1, 1, 1], [e, f, l, t, u], 30);
constraint int_lin_eq([1, 1, 1, 2, 1], [a, b, e, l, t], 45);
constraint int_lin_eq([2, 1, 1, 1, 1], [i, l, n, o, v], 100);
constraint int_lin_eq([1, 1, 1, 1, 2, 1], [a, e, q, r, t, u], 50);
constraint int_lin_eq([1, 1, 2, 1, 1, 1], [a, n, o, p, r, s], 82);
constraint int_lin_eq([2, 1, 1, 1, 1, 1], [c, e, n, o, r, t], 74);
constraint int_lin_eq([1, 1, 1, 1, 2, 1, 1, 1], [a, e, h, n, o, p, s, x], 134);
solve satisfy;
