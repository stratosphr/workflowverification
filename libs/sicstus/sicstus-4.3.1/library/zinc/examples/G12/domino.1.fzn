predicate all_different_int(array [int] of var int: x);
predicate all_equal_int(array [int] of var int: x);
predicate among_sicstus(var int: n, array [int] of var int: x, set of int: v);
predicate at_least_int(int: n, array [int] of var int: x, int: v);
predicate at_most_int(int: n, array [int] of var int: x, int: v);
predicate bin_packing_capa_sicstus(array [int] of int: c, array [int] of var int: bin, array [int] of int: w, int: min_index);
predicate bin_packing_load_sicstus(array [int] of var int: l, array [int] of var int: bin, array [int] of int: w, int: min_index);
predicate bin_packing_sicstus(int: c, array [int] of var int: bin, array [int] of int: w);
predicate count_sicstus(array [int] of var int: x, var int: y, var int: c);
predicate cumulative(array [int] of var int: s, array [int] of var int: d, array [int] of var int: r, var int: b);
predicate diffn_sicstus(array [int] of var int: x, array [int] of var int: y, array [int] of var int: dx, array [int] of var int: dy);
predicate distribute_sicstus(array [int] of var int: card, array [int] of var int: representation, array [int] of var int: base);
predicate element_bool_sicstus(var int: i, array [int] of var bool: x, var bool: y, int: min_index);
predicate element_int_sicstus(var int: i, array [int] of var int: x, var int: y, int: min_index);
predicate exactly_int(int: n, array [int] of var int: x, int: v);
predicate global_cardinality_low_up_sicstus(array [int] of var int: x, array [int] of int: cover, array [int] of int: lbound, array [int] of int: ubound, int: closed);
predicate global_cardinality_sicstus(array [int] of var int: x, array [int] of int: cover, array [int] of var int: counts, int: closed);
predicate inverse_sicstus(array [int] of var int: f, array [int] of var int: invf, int: min_index_f, int: min_index_invf);
predicate lex2_sicstus(array [int] of var int: x, int: nrows, int: ncolumns, int: relop);
predicate lex_sicstus(array [int] of var int: x, array [int] of var int: y, int: relop);
predicate maximum_int(var int: m, array [int] of var int: x);
predicate member_bool(array [int] of var bool: x, var bool: y);
predicate member_int(array [int] of var int: x, var int: y);
predicate minimum_int(var int: m, array [int] of var int: x);
predicate nvalue(var int: n, array [int] of var int: x);
predicate pairwise_relation_bool_sicstus(array [int] of var bool: x, int: relop);
predicate pairwise_relation_int_sicstus(array [int] of var int: x, int: relop);
predicate regular_sicstus(array [int] of var int: x, int: Q, int: S, array [int] of int: d, int: q0, set of int: F);
predicate sort(array [int] of var int: x, array [int] of var int: y);
predicate sum_pred_sicstus(var int: i, array [int] of set of int: sets, array [int] of int: cs, var int: s, int: min_index);
predicate table_bool_sicstus(array [int] of var bool: x, array [int] of bool: t);
predicate table_int_sicstus(array [int] of var int: x, array [int] of int: t);
predicate value_precede_chain_sicstus(array [int] of int: c, array [int] of var int: x);
predicate value_precede_sicstus(int: s, int: t, array [int] of var int: x);
array [1..56] of int: a = [4, 3, 4, 6, 5, 0, 6, 6, 3, 5, 3, 3, 5, 0, 2, 6, 3, 4, 5, 1, 0, 5, 6, 0, 1, 1, 5, 1, 2, 4, 2, 4, 6, 3, 0, 3, 0, 2, 5, 1, 5, 4, 0, 6, 2, 0, 1, 2, 1, 6, 2, 3, 1, 4, 4, 2];
array [1..56] of var 0..1: h :: output_array([1..7, 1..8]);
array [1..56] of var 0..1: v :: output_array([1..7, 1..8]);
constraint int_eq(h[8], 0);
constraint int_eq(h[16], 0);
constraint int_eq(h[24], 0);
constraint int_eq(h[32], 0);
constraint int_eq(h[40], 0);
constraint int_eq(h[48], 0);
constraint int_eq(h[56], 0);
constraint int_eq(v[49], 0);
constraint int_eq(v[50], 0);
constraint int_eq(v[51], 0);
constraint int_eq(v[52], 0);
constraint int_eq(v[53], 0);
constraint int_eq(v[54], 0);
constraint int_eq(v[55], 0);
constraint int_eq(v[56], 0);
constraint int_lin_eq([1], [h[51]], 1);
constraint int_lin_eq([2], [h[54]], 2);
constraint int_lin_eq([2], [v[48]], 2);
constraint int_lin_eq([1, 1], [h[1], v[1]], 1);
constraint int_lin_eq([1, 1], [h[3], v[42]], 1);
constraint int_lin_eq([1, 1], [h[20], h[46]], 1);
constraint int_lin_eq([1, 1], [h[38], v[31]], 1);
constraint int_lin_eq([1, 1], [h[49], v[25]], 1);
constraint int_lin_eq([2, 2], [h[7], v[8]], 2);
constraint int_lin_eq([2, 2], [h[11], v[9]], 2);
constraint int_lin_eq([2, 2], [h[25], v[20]], 2);
constraint int_lin_eq([2, 2], [v[5], v[19]], 2);
constraint int_lin_eq([2, 2], [v[6], v[35]], 2);
constraint int_lin_eq([1, 1, 1], [h[1], h[2], v[2]], 1);
constraint int_lin_eq([1, 1, 1], [h[2], h[3], v[3]], 1);
constraint int_lin_eq([1, 1, 1], [h[3], h[4], v[4]], 1);
constraint int_lin_eq([1, 1, 1], [h[4], h[5], v[5]], 1);
constraint int_lin_eq([1, 1, 1], [h[4], h[22], v[33]], 1);
constraint int_lin_eq([1, 1, 1], [h[5], h[6], v[6]], 1);
constraint int_lin_eq([1, 1, 1], [h[6], h[7], v[7]], 1);
constraint int_lin_eq([1, 1, 1], [h[7], h[8], v[8]], 1);
constraint int_lin_eq([1, 1, 1], [h[9], v[1], v[9]], 1);
constraint int_lin_eq([1, 1, 1], [h[17], v[9], v[17]], 1);
constraint int_lin_eq([1, 1, 1], [h[25], v[17], v[25]], 1);
constraint int_lin_eq([1, 1, 1], [h[33], v[25], v[33]], 1);
constraint int_lin_eq([1, 1, 1], [h[34], h[35], h[36]], 1);
constraint int_lin_eq([1, 1, 1], [h[41], v[33], v[41]], 1);
constraint int_lin_eq([1, 1, 1], [h[42], v[24], v[46]], 1);
constraint int_lin_eq([1, 1, 1], [h[49], v[41], v[49]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[6], h[23], h[43], v[16]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[9], h[10], v[2], v[10]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[10], h[11], v[3], v[11]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[11], h[12], v[4], v[12]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[12], h[13], v[5], v[13]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[13], h[14], v[6], v[14]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[14], h[15], v[7], v[15]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[15], h[16], v[8], v[16]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[17], h[18], v[10], v[18]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[18], h[19], v[11], v[19]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[18], h[41], v[10], v[22]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[19], h[20], v[12], v[20]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[20], h[21], v[13], v[21]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[21], h[22], v[14], v[22]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[22], h[23], v[15], v[23]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[23], h[24], v[16], v[24]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[25], h[26], v[18], v[26]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[26], h[27], v[19], v[27]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[27], h[28], v[20], v[28]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[28], h[29], v[21], v[29]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[28], h[47], v[40], v[45]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[29], h[30], v[22], v[30]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[30], h[31], v[23], v[31]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[31], h[32], v[24], v[32]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[33], h[34], v[26], v[34]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[33], v[4], v[36], v[44]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[34], h[35], v[27], v[35]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[35], h[36], v[28], v[36]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[36], h[37], v[29], v[37]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[37], h[38], v[30], v[38]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[38], h[39], v[31], v[39]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[39], h[40], v[32], v[40]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[41], h[42], v[34], v[42]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[42], h[43], v[35], v[43]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[43], h[44], v[36], v[44]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[44], h[45], v[37], v[45]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[45], h[46], v[38], v[46]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[46], h[47], v[39], v[47]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[47], h[48], v[40], v[48]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[49], h[50], v[42], v[50]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[50], h[51], v[43], v[51]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[51], h[52], v[44], v[52]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[52], h[53], v[45], v[53]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[53], h[54], v[46], v[54]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[53], v[18], v[32], v[47]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[54], h[55], v[47], v[55]], 1);
constraint int_lin_eq([1, 1, 1, 1], [h[55], h[56], v[48], v[56]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [h[9], h[10], h[12], v[2], v[11]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [h[29], h[30], h[31], h[55], v[30]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1], [h[52], v[12], v[17], v[26], v[28]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1], [h[1], h[2], h[17], v[1], v[3], v[34]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1], [h[5], h[13], h[21], v[13], v[14], v[27]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1], [h[15], h[44], h[50], v[7], v[15], v[23]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1], [h[19], h[26], h[27], h[39], v[39], v[41]], 1);
constraint int_lin_eq([1, 1, 1, 1, 1, 1, 1, 1], [h[14], h[37], h[45], v[21], v[29], v[37], v[38], v[43]], 1);
solve satisfy;
